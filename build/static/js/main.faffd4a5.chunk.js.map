{"version":3,"sources":["context/SnakeContext.js","context/create.context.helper.js","hooks/useInterval.js","components/Container.js","components/Cell.js","components/Row.js","components/App.js","index.js"],"names":["DIRECTION","initialState","snake","x","y","direct","food","foodExist","stop","moveUtil","state","dirIndex","indexOf","slice","reducer","actions","Context","createContext","Provider","children","useReducer","dispatch","boundActions","useMemo","key","console","log","getActions","value","createContextHelper","type","payload","actionTypes","CHANGE_DIRECTION","Math","abs","MOVE","CREATE_FOOD","randomFoodPosition","EAT_FOOD","STOP","RESET","changeDirection","move","createFood","eatFood","last_location","setStop","reset","floor","random","some","s","useInterval","cb","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","LAST_LOCATION","Container","React","forwardRef","ref","useContext","SnakeContext","containerRef","useImperativeHandle","focus","length","_","findIndex","onKeyDownHandler","useCallback","keyCode","includes","tabIndex","onKeyDown","className","Cell","active","head","Row","yaxis","row","Array","map","v","i","_food","forEach","piece","inital","GameMsg","memo","onConfirm","msgObj","msg","btnTitle","onClick","displayName","App","createRef","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.faffd4a5.chunk.js","sourcesContent":["import createContextHelper from \"./create.context.helper\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst DIRECTION = [\"left\", \"top\", \"right\", \"down\"];\r\n/*\r\n\tLeft & Right Directiocn is at index 0 & 2 and have x value change at index - 1 per interval\r\n\tTop & Down Directiocn is at index 1 & 3 and have y value change at index - 2 per interval\r\n*/\r\n\r\nconst initialState = {\r\n\tsnake: [{ x: 6, y: 5 }],\r\n\tdirect: \"top\",\r\n\tfood: {},\r\n\tfoodExist: false,\r\n\tstop: true\r\n};\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase actionTypes.CHANGE_DIRECTION:\r\n\t\t\tif(state.stop) \r\n\t\t\t\treturn state\r\n\r\n\t\t\t//return original state if same direction or opposite direction\r\n\t\t\treturn (state.direct === payload || Math.abs(DIRECTION.indexOf(payload) - DIRECTION.indexOf(state.direct)) === 2) ? state : { ...state, direct: payload };\r\n\t\tcase actionTypes.MOVE:\r\n\t\t\treturn { ...state, snake: moveUtil(state) };\r\n\t\tcase actionTypes.CREATE_FOOD:\r\n\t\t\treturn { ...state, food: randomFoodPosition(state.snake), foodExist: true }\r\n\t\tcase actionTypes.EAT_FOOD:\r\n\t\t\treturn { ...state, ...payload, snake: [...state.snake, payload], foodExist: false };\r\n\t\tcase actionTypes.STOP:\r\n\t\t\treturn { ...state, stop: true };\r\n\t\tcase actionTypes.RESET:\r\n\t\t\t//do no reset if the game is running\r\n\t\t\treturn state.stop ? { ...initialState, stop: false } : state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst moveUtil = (state) => {\r\n\tconst { direct, snake } = state;\r\n\tlet { x, y } = snake[0];\r\n\tconst dirIndex = DIRECTION.indexOf(direct);\r\n\r\n\tif(dirIndex % 2 === 0) \r\n\t\tx += dirIndex - 1;\r\n\telse \r\n\t\ty += dirIndex - 2;\r\n\r\n\treturn [{ x, y }, ...snake.slice(0, -1)]\r\n}\r\n\r\nconst move = (dispatch) => () => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.MOVE\r\n\t});\r\n};\r\n\r\nconst changeDirection = (dispatch) => (direct) => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.CHANGE_DIRECTION,\r\n\t\tpayload: DIRECTION[direct]\r\n\t});\r\n};\r\n\r\nconst createFood = (dispatch) => () => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.CREATE_FOOD,\r\n\t});\r\n};\r\n\r\nconst eatFood = (dispatch) => (last_location) => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.EAT_FOOD,\r\n\t\tpayload: last_location\r\n\t});\r\n};\r\n\r\nconst setStop = (dispatch) => () => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.STOP\r\n\t});\r\n};\r\n\r\nconst reset = (dispatch) => () => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.RESET\r\n\t});\r\n};\r\n\r\nexport const { Context, Provider } = createContextHelper(\r\n\treducer,\r\n\t{ changeDirection, move, createFood, eatFood, setStop, reset },\r\n\tinitialState\r\n);\r\n\r\nconst actionTypes = {\r\n\tMOVE: \"MOVE\",\r\n\tCHANGE_DIRECTION: \"CHANGE_DIRECTION\",\r\n\tCREATE_FOOD: \"CREATE_FOOD\",\r\n\tEAT_FOOD: \"EAT_FOOD\",\r\n\tSTOP: \"STOP\",\r\n\tRESET: \"RESET\"\r\n};\r\n\r\nconst randomFoodPosition = (snake) => {\r\n\tconst x = Math.floor(Math.random() * 14), y = Math.floor(Math.random() * 11);\r\n\t\r\n\treturn snake.some(s => s.x === x && s.y === y) ? randomFoodPosition(snake) : {x, y}\r\n};\r\n","import React, { createContext, useReducer, useCallback, useMemo } from \"react\";\r\n\r\nconst getActions = (actions, dispatch, state) => {\r\n\tconst boundActions = {}\r\n\t\r\n\tfor (let key in actions) {\r\n\t\t// boundActions[key] = actions[key](dispatch, state);\r\n\r\n\t\tboundActions[key] = (...p) => {\r\n\t\t\tconsole.log('Actions Dispatch: ', key)\r\n\t\t\tactions[key](dispatch)(...p)\r\n\t\t};\r\n\t}\r\n\r\n\treturn boundActions\r\n}\r\n\r\nexport default (reducer, actions, initialState) => {\r\n\tconst Context = createContext();\r\n\r\n\tconst Provider = ({ children }) => {\r\n\t\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\t\tconst boundActions = useMemo(() => getActions(actions, dispatch), [actions, dispatch]);\r\n\t\t// const boundActions = getActions(actions, dispatch, state);\r\n\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={{ state, ...boundActions }}>\r\n\t\t\t\t{children}\r\n\t\t\t</Context.Provider>\r\n\t\t);\r\n\t};\r\n\r\n\treturn { Context, Provider };\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nconst useInterval = (cb, delay) => {\r\n\tconst savedCallback = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = cb;\r\n\t}, [cb]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfunction tick() {\r\n\t\t\tsavedCallback.current();\r\n\t\t}\r\n\r\n\t\tif (delay !== null) {\r\n\t\t\tlet id = setInterval(tick, delay);\r\n\t\t\treturn () => clearInterval(id);\r\n\t\t}\r\n\t}, [delay]);\r\n};\r\n\r\nexport default useInterval;\r\n","import React, { useContext, useState, useEffect, useCallback, useRef, useImperativeHandle } from \"react\";\r\nimport { Context as SnakeContext } from \"../context/SnakeContext\";\r\nimport useInterval from \"../hooks/useInterval\";\r\nimport _ from \"lodash\";\r\n\r\nlet LAST_LOCATION = {};\r\n\r\nconst Container = React.forwardRef(({ children }, ref) => {\r\n\tconst {\r\n\t\tstate: { snake, foodExist, food, stop },\r\n\t\tchangeDirection,\r\n\t\tmove,\r\n\t\tcreateFood,\r\n\t\teatFood,\r\n\t\tsetStop,\r\n\t\treset\r\n\t} = useContext(SnakeContext);\r\n\tconst containerRef = useRef();\r\n\tuseImperativeHandle(ref, () => ({\r\n\t  focus: () => {\r\n\t\tcontainerRef.current.focus();\r\n\t  }\r\n\t}));\r\n\r\n\tuseEffect(() => {\r\n\t\tconst length = snake.length;\r\n\t\tif (\r\n\t\t\tsnake[0].x < 0 ||\r\n\t\t\tsnake[0].y < 0 ||\r\n\t\t\tsnake[0].x > 13 ||\r\n\t\t\tsnake[0].y > 10 ||\r\n\t\t\t(snake.length >= 3 && _.findIndex(snake.slice(1), snake[0]) !== -1)\r\n\t\t) {\r\n\t\t\tsetStop();\r\n\t\t}\r\n\r\n\t\tif (foodExist) {\r\n\t\t\tif (snake[0].x === food.x && snake[0].y === food.y) {\r\n\t\t\t\teatFood(LAST_LOCATION);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcreateFood();\r\n\t\t}\r\n\r\n\t\tLAST_LOCATION = snake[length - 1];\r\n\t}, [snake, foodExist]);\r\n\r\n\tconst onKeyDownHandler = useCallback(({ keyCode }) => {\r\n\t\tif (keyCode === 13) \r\n\t\t\treset();\r\n\r\n\t\tif([37, 38, 39, 40].includes(keyCode))\r\n\t\t\tchangeDirection(keyCode - 37);\r\n\t}, []);\r\n\r\n\tuseInterval(move, !stop ? 250 : null);\r\n\r\n\treturn (\r\n\t\t<div id='container' ref={containerRef} tabIndex=\"0\" onKeyDown={onKeyDownHandler} className=\"body\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"score\">Your Score: {snake.length - 1}</div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nconst Cell = ({ active, head, food }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`cell ${active ? \"active\" : \"\"} ${head ? \"head\" : \"\"} ${food ? \"food\" : \"\"}`}\r\n\t\t></div>\r\n\t);\r\n};\r\n\r\nexport default Cell;\r\n","import React, {\r\n\tcloneElement,\r\n\tuseContext,\r\n\tuseState,\r\n\tuseEffect,\r\n\tuseMemo\r\n} from \"react\";\r\nimport { Context as SnakeContext } from \"../context/SnakeContext\";\r\nimport Cell from \"./Cell\";\r\n\r\nconst Row = ({ yaxis }) => {\r\n\tconst {\r\n\t\tstate: { snake, food }\r\n\t} = useContext(SnakeContext);\r\n\r\n\tconst row = useMemo(() => {\r\n\t\treturn [...Array(14)].map((v, i) => {\r\n\t\t\tlet active = false;\r\n\t\t\tlet _food = false;\r\n\t\t\tlet head = false\r\n\t\t\tsnake.forEach((piece) => {\r\n\t\t\t\tif (piece.x === i && piece.y === yaxis) {\r\n\t\t\t\t\tactive = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(snake[0].x === i && snake[0].y === yaxis) \r\n\t\t\t\thead = true;\r\n\r\n\t\t\tif (food.x === i && food.y === yaxis) {\r\n\t\t\t\t_food = true;\r\n\t\t\t}\r\n\t\t\treturn <Cell key={i} food={_food} active={active} head={head}/>;\r\n\t\t});\r\n\t}, [snake, food]);\r\n\r\n\treturn <div className=\"row\">{row}</div>;\r\n};\r\n\r\nexport default Row;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Context as SnakeContext } from \"../context/SnakeContext\";\r\nimport \"./css/style.css\";\r\nimport Container from \"./Container\";\r\nimport Row from \"./Row\";\r\n\r\nlet inital = 0\r\n\r\nconst GameMsg = React.memo(({stop, onConfirm}) => {\r\n\tconst msgObj = inital === 0 ? {msg: 'Welcome', btnTitle: 'Start'} : {msg: 'GameOver', btnTitle: 'Reset'}\r\n\r\n\tinital++\r\n\r\n\tif(!stop) return null\r\n\r\n\treturn (\r\n\t\t<div className=\"msg\">\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"msg-title\">{msgObj.msg}</div>\r\n\t\t\t\t<button onClick={onConfirm} className=\"msg-btn\">\r\n\t\t\t\t\t{msgObj.btnTitle}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\nGameMsg.displayName = 'GameMsg'\r\n\r\nconst App = () => {\r\n\tconst {\r\n\t\tstate: { stop },\r\n\t\treset, \r\n\t} = useContext(SnakeContext);\r\n\tconst containerRef = React.createRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tcontainerRef.current.focus()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<Container ref={containerRef}>\r\n\t\t\t<GameMsg stop = {stop} onConfirm = {reset}/>\r\n\t\t\t{[...Array(11)].map((v, i) => (\r\n\t\t\t\t<Row key={i} yaxis={i} />\r\n\t\t\t))}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider as SnakeProvider } from \"./context/SnakeContext\";\r\n\r\nReactDOM.render(\r\n\t<SnakeProvider>\r\n\t\t<App />\r\n\t</SnakeProvider>,\r\n\tdocument.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["react-form/form.component.jsx","react-form/form-input.component.jsx","App.js","serviceWorker.js","index.js"],"names":["formReducer","state","action","payload","defaultValue","key","value","ftn","type","_isFunction","FormContext","createContext","updateValue","updateFormValue","size","layout","horizontal","useFormContext","id","useContext","v","console","log","Form","forwardRef","ref","children","useReducer","dispatch","useCallback","useImperativeHandle","getValue","useEffect","Provider","SelectInput","props","onChange","option","DateInput","selected","FormInput","label","_capitalize","component","componentProps","formHorizontal","getClassNames","layoutStr","containerClassName","labelClassName","inputContainerClassName","inputClassName","split","undefined","classNames","row","map","n","i","handleChange","e","target","Input","React","createElement","className","htmlFor","name","age","email","phone","schedule","Schedule","useState","setType","date","setDate","isClearable","options","styles","container","base","width","inputId","wrapperClassName","onClick","disabled","s","format","moment","toDateString","App","formRef","useRef","setValue","index","setIndex","setTimeout","formValue","current","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2fd167e.chunk.js","sourcesContent":["import React, {forwardRef, useImperativeHandle, useContext, useReducer, createContext, useCallback} from 'react'\r\n\r\nimport _isFunction from 'lodash/isFunction'\r\nimport { useEffect } from 'react'\r\n\r\nconst formReducer = (state, action) => {\r\n    const {defaultValue, key, value, ftn} = action.payload\r\n\r\n    switch(action.type) {\r\n        case 'init':\r\n            return {...defaultValue}\r\n        case 'updateValue':\r\n            if(_isFunction(value))\r\n                return {...state, [key]: value(state[key], state)}\r\n            else\r\n                return {...state, [key]: value}\r\n\r\n        case 'updateFormValue':\r\n            if(ftn)\r\n                return {...state, value: ftn(state.value)}\r\n            return {...state, value: {...state.value, ...value}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const FormContext = createContext({\r\n    value: {},\r\n    updateValue: {},\r\n    updateFormValue: {}, \r\n    size: 'sm',\r\n    layout: '2-10', \r\n    horizontal: false,\r\n})\r\n\r\nexport const useFormContext = (id) => {\r\n    const {state, updateValue, horizontal, size, layout} = useContext(FormContext)\r\n    const {[id]: value} = state || {} \r\n\r\n    return [\r\n        value, \r\n        (v) => {\r\n            console.log('update value')\r\n            updateValue(id, v)\r\n        }, \r\n        horizontal,\r\n        size, \r\n        layout, \r\n    ]\r\n}\r\n\r\nexport const Form = forwardRef(({\r\n    children, \r\n    defaultValue = {}, \r\n    horizontal = false, \r\n    size, \r\n    layout, \r\n}, ref) => {\r\n    const [state, dispatch] = useReducer(formReducer, defaultValue)\r\n    const updateValue = useCallback((key, value) => dispatch({\r\n        type: 'updateValue',\r\n        payload: {\r\n            key, value, \r\n        }\r\n    }), [dispatch])\r\n    const updateFormValue = useCallback((value) => dispatch({\r\n        type: 'updateFormValue',\r\n        payload: {\r\n            value, \r\n        }\r\n    }), [dispatch])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getValue: () => ({...state})\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'init',\r\n            payload: {defaultValue}\r\n        })\r\n    }, [defaultValue, dispatch])\r\n\r\n    return (\r\n        <FormContext.Provider value = {{state, updateValue, updateFormValue, horizontal, size, layout}}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    )\r\n})\r\n\r\nexport default Form","import React, {} from 'react'\r\nimport classNames from 'classnames/bind'\r\nimport Select from 'react-select'\r\nimport DatePicker from \"react-datepicker\"\r\nimport moment from 'moment'\r\n\r\nimport _capitalize from 'lodash/capitalize'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n\r\nimport {useFormContext} from './form.component'\r\n\r\nconst getClassNames = (id, horizontal, size, layoutStr, {\r\n    containerClassName, \r\n    labelClassName, \r\n    inputContainerClassName, \r\n    inputClassName\r\n}) => {\r\n    const layout = layoutStr.split('-')\r\n\r\n    if(typeof id === 'string' || id === undefined) {\r\n        return [{\r\n            containerClassName: classNames('form-group', {\r\n                row: horizontal\r\n            }, containerClassName), \r\n            labelClassName: classNames({\r\n                [`col-${size}-${layout[0]}`]: horizontal,\r\n                'col-form-label': horizontal, \r\n            }, labelClassName), \r\n            inputContainerClassName: classNames({\r\n                [`col-${size}-${layout[1]}`]: horizontal,\r\n            }, 'd-flex', 'align-items-center', inputContainerClassName), \r\n            inputClassName: classNames('form-control', {\r\n\r\n            }, inputClassName), \r\n        }]\r\n    }\r\n    else {\r\n        return id.map((n, i) => getClassNames(n, horizontal, size[i], layout[i]))\r\n    }\r\n}\r\n\r\n/*\r\nif FormInput is not being used or wrapped within a Form component, \r\nplease porvide your own \r\n    value, \r\n    onChange\r\nprops, or else, it will take wrong value and update a upper stream Form Component\r\n\r\n<Form>\r\n    <FormInput id = 'xx'/>\r\n\r\n    // Input that is not relevant with the form\r\n    <FormInput id = 'yy' value = 'zz' onChange = {}/>\r\n</Form>\r\n\r\n*/\r\n\r\nconst FormInput = ({\r\n        id, \r\n        label = _capitalize(id), \r\n        type = 'text', \r\n        onChange, \r\n        component, \r\n        componentProps, \r\n        horizontal, \r\n        size, \r\n        layout,\r\n        value: propsValue, \r\n        ...props\r\n    }) => {\r\n        const [value, updateValue, formHorizontal, formSize, formLayout] = useFormContext(id)\r\n        const [{containerClassName, labelClassName, inputContainerClassName, inputClassName}] = getClassNames(id, formHorizontal || horizontal, formSize || size, formLayout || layout, props)\r\n        \r\n        const handleChange = onChange || (e => updateValue(e.target.value))\r\n\r\n        const Input = component ? \r\n            React.createElement(component, {id, value, updateValue, ...componentProps}) :\r\n            <input \r\n                className = {inputClassName}\r\n                id = {id} \r\n                type = {type} \r\n                value = {value}\r\n                onChange = {handleChange} \r\n                {...props}\r\n            />\r\n\r\n        return (\r\n            <div className = {containerClassName}>\r\n                <label htmlFor = {id} className = {labelClassName}>{label}</label>\r\n\r\n                {formHorizontal || horizontal ? (\r\n                    <div className = {inputContainerClassName}>\r\n                        {Input}\r\n                    </div>\r\n                ) : Input}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport const normalizeOptions = (options) => {\r\n    return options.map(opt => opt)\r\n}\r\n\r\nexport const normalizeValue = (value, options) => {\r\n    const opts = options.find(opt => opt.value === value)\r\n    \r\n    return opts[0] ? opts[0] : null\r\n}\r\n\r\n//uncontrolled component (but can be controlled)\r\nexport const SelectInput = (props) => {\r\n    const [value, updateValue] = useFormContext(props.id)\r\n \r\n    const onChange = props.onChange || ((option, action) => {\r\n        updateValue(\r\n            // props.getOptionValue ?           \r\n            // props.getOptionValue(option) :\r\n            // option.value\r\n            option\r\n        )\r\n    })\r\n\r\n    return <Select value={value} onChange = {onChange} {...props}/>\r\n}\r\n\r\nexport const toDateString = (date, format) => moment(date).format('DD/MM/YYYY', format)\r\n\r\nexport const DateInput = ({value, updateValue, ...props}) => {\r\n    // const [value, updateValue] = useFormContext(props.id) \r\n    // const handleChange = onChange || ((date) => {\r\n    //     updateValue(date)\r\n    // })\r\nconsole.log(value)\r\n    return (\r\n        <DatePicker\r\n            selected = {value}\r\n            onChange = {updateValue}\r\n            {...props} \r\n        />\r\n    )\r\n}\r\n\r\nexport default FormInput","import React, { useState, useRef, useEffect } from 'react'\nimport Form, { useFormContext } from './react-form/form.component'\nimport FormInput, { DateInput, SelectInput, toDateString } from './react-form/form-input.component'\n\nimport './App.css';\n\nconst defaultValue = [{\n  name: 'Ben Tang',\n  age: 23,\n  email: '1@1.com',\n  phone: '0933221103',\n  schedule: [],\n}, {\n  name: 'Ada Chiu',\n  age: 33,\n  email: 'a@a.com',\n  phone: '0945231126',\n  schedule: [],\n}]\n\nfunction App() {\n  const formRef = useRef()\n  const [value, setValue] = useState({})\n  const [index, setIndex] = useState(0)\n\n  useEffect(() => {\n    //simulate get data by API\n    setTimeout(() => {\n      setValue(defaultValue[0])\n    }, 1000)\n  }, [setValue, defaultValue])\n\n  useEffect(() => {\n    setValue(defaultValue[index])\n  }, [index, setValue, defaultValue])\n\n  const handleClick = () => {\n    if(index === 0)\n      setValue(defaultValue[1])\n    if(index === 1)\n      setValue(defaultValue[0])\n\n    setIndex(i => {\n      if(i === 0) return 1\n      if(i === 1) return 0\n    })\n  }\n\n  const submit = () => {\n    const formValue = formRef.current.getValue()\n    console.log(formValue)\n  }\n\n  return (\n    <div className=\"container-fluid p-5\">\n      <button className='btn btn-primary btn-sm m-2' onClick={handleClick}>Change Form Default Value Props</button>\n      <Form ref={formRef} defaultValue={value} horizontal size='sm' layout='2-10'>\n        <FormInput id='name'/>\n        <FormInput id='age' type='number'/>\n        <FormInput id='phone'/>\n        <FormInput id='email'/>\n        <FormInput id='schedule' inputContainerClassName='flex-wrap' component={Schedule}/>\n        <button className='btn btn-primary btn-sm m-2' onClick={submit}>Submit</button>\n      </Form>\n    </div>\n  );\n}\n\nconst Schedule = (props) => {\n  const [schedule = [], updateValue] = useFormContext('schedule')\n  const [type, setType] = useState(null), [date, setDate] = useState(null)\n\n  const addSchedule = () => {\n      setType(null)\n      setDate(null)\n      updateValue(schedule => [...schedule, {type, date}])\n      //TODO: sort on actual date\n  }\n\n  return (\n      <>\n        <SelectInput \n          isClearable\n          className = 'w-25 mr-3'\n          options = {[{value: 'UAT', label: 'UAT'}, {value: 'SIT', label: 'SIT'}]}\n          styles = {{\n              container: (base, props) => {\n                  return {...base, width: '100%'}\n              }\n          }}\n          id = 'type'\n          name = 'type'\n          value = {type}\n          inputId = 'schedule'\n          onChange = {setType}\n        />\n        <DateInput\n          wrapperClassName = 'w-50 mr-3'\n          className = 'form-control'\n          value = {date}\n          onChange = {setDate}\n        />\n        <button className='btn btn-primary btn-sm' onClick={addSchedule} disabled={!type || !date}>Add</button>\n        <div className = 'w-100 m-2'> \n          {\n            schedule.map((s, i) => (\n              <div key={i} className = {`w-75 d-flex border border-primary${i !== 0 ? ' border-top-0' : ''} p-1`}>\n                <div className = 'w-25 mr-3'>{s.type.label}</div>\n                <div className = 'w-50 mr-3'>{toDateString(s.date)}</div>\n              </div>\n            ))\n          }\n        </div>\n      </>\n  )\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}